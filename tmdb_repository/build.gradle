apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdk
    defaultConfig {
        minSdkVersion rootProject.ext.minSdk
        targetSdkVersion rootProject.ext.targetSdk
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            if (project.hasProperty('MovieDB_ApiKey')) {
                buildConfigField('String', 'API_KEY', MovieDB_ApiKey)
            } else {
                buildConfigField('String', 'API_KEY', "\"mock-key\"")
            }
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            if (project.hasProperty('MovieDB_ApiKey')) {
                buildConfigField('String', 'API_KEY', MovieDB_ApiKey)
            } else {
                buildConfigField('String', 'API_KEY', "\"mock-key\"")
            }
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        dev {
            if (project.hasProperty('MovieDB_ApiKey')) {
                buildConfigField('String', 'API_KEY', MovieDB_ApiKey)
            } else {
                buildConfigField('String', 'API_KEY', "\"mock-key\"")
            }
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    androidExtensions {
        experimental = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation Libs.org_jetbrains_kotlin_kotlin_stdlib_jdk7

    implementation Libs.kotlinx_coroutines_core
    implementation Libs.kotlinx_coroutines_android

    implementation Libs.retrofit2_kotlin_coroutines_adapter
    implementation Libs.retrofit
    implementation Libs.logging_interceptor
    implementation Libs.moshi
    implementation Libs.converter_moshi
    implementation Libs.moshi_adapters
    kapt Libs.moshi_kotlin_codegen

}
